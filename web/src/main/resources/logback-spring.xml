<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="false" scanPeriod="30 seconds">
    <springProperty scope="context" name="rootLogLevel" source="logging.level.root"/>
    <springProperty scope="context" name="logPath" source="LOG_PATH"/>
    <springProperty scope="context" name="appName" source="LOG_FILE"/>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/${appName}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${logPath}/${appName}.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
            <!--日志文件最大的大小-->
            <maxFileSize>20MB</maxFileSize>
            <totalSizeCap>50GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 错误日志 appender ： 按照每天生成日志文件 -->
    <appender name="ERROR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <!-- 过滤器，只记录 error 级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>error</level>
        </filter>
        <!-- 日志名称 -->
        <file>${logPath}/${appName}-error.log</file>
        <!-- 每天生成一个日志文件，保存30天的日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名:按天回滚 daily -->
            <FileNamePattern>${logPath}/${appName}-error.log.%d{yyyy-MM-dd}</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!-- 编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>



    <appender name="asyncFileAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>500</queueSize>
        <appender-ref ref="FILE"/>
    </appender>

    <!--添加自定义filter Start-->
    <!--此filter是为了websocket输出到前端页面服务-->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%contextName- %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
<!--        <filter class="LogFilter"></filter>-->
    </appender>
    <root level="${rootLogLevel}">
<!--        <appender-ref ref="consoleAppender"/>-->
        <appender-ref ref="asyncFileAppender"/>
    </root>
    <!--添加自定义filter End-->

    <springProfile name="dev">
        <root level="${rootLogLevel}">
            <appender-ref ref="consoleAppender"/>
            <appender-ref ref="asyncFileAppender"/>
            <appender-ref ref="ERROR-APPENDER"/>
        </root>
    </springProfile>

    <springProfile name="unit">
        <root level="${rootLogLevel}">
            <appender-ref ref="consoleAppender"/>
            <appender-ref ref="asyncFileAppender"/>
            <appender-ref ref="ERROR-APPENDER"/>
        </root>
    </springProfile>
    <springProfile name="test">
        <root level="${rootLogLevel}">
            <appender-ref ref="consoleAppender"/>
            <appender-ref ref="asyncFileAppender"/>
            <appender-ref ref="ERROR-APPENDER"/>
        </root>
    </springProfile>
    <springProfile name="prod">
        <root level="${rootLogLevel}">
<!--            <appender-ref ref="consoleAppender"/>-->
            <appender-ref ref="asyncFileAppender"/>
            <appender-ref ref="ERROR-APPENDER"/>
        </root>
    </springProfile>
</configuration>